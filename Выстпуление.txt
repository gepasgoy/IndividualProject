Стоит подметить, что в начале я могу расмотреть docker и контейнеризацию отдельно, но в будущем буду говорить об этом как об одном явлении, так как Docker подчёркивает многие преимущества контейнеризации и реализует разные функции, которые стали базовыми в мире контейнеризации, что делает их неразрывными.

Аналогии:
DOCKER Пример: Как стартовый набор лего(юаза,фундамент),который(на котором можно возводить что угодн) уже имеет какие-то детали, но ему не хватает дополнительных деталей(вашего приложения) для полноценной конструкции

Подводки:
(После 3 слайда)  И всё это плавно перетекает в востребованность docker как удобного инструмента с малым количеством аналогов и контейнеризации в принципе
В актуальности упомянуть (статистику с hh топ 10 наиболее востребованных навыков в IT вакансиях 2023-2024)

(в практической части после тгбота) Я сделал дс бота именно в таком исполнении, из-за когов

Изоляция.
Портативность. 
Эффективность использования ресурсов. 
Масштабируемость. 
Управление версиями.

Приветствую всех! Меня зовут Хаксар М.Н., и я студент группы ИСП131. Сегодня я расскажу вам о своем проекте, который называется "Docker контейнеризация". Руководителем моего проекта была Ломаченкова А.И.

Возможно, вы слышали о Docker, но не совсем понимаете, что это такое. Если коротко, это как "упаковка" для ваших программ, чтобы они работали везде одинаково. И это очень актуальная тема, потому что сейчас многие компании используют Docker, чтобы упростить себе жизнь.

Цель моего проекта – сделать так, чтобы каждый, даже новичок, мог легко "упаковать" свои программы на Python в Docker.

Для этого я поставил перед собой несколько задач:

•  Во-первых, разобраться в теории Docker.
•  Во-вторых, создать специальные файлы, которые нужны для "упаковки" программ.
•  В-третьих, разработать два простых бота на Python – для Telegram и Discord.
•  И, наконец, "упаковать" этих ботов в Docker и запустить их на специальном сервисе.

Что же такое Docker?

Представьте себе, что у вас есть любимая игра, и вы хотите, чтобы она работала на любом компьютере, даже если на нем нет нужных программ. Docker – это как раз такой "контейнер", в который вы можете поместить свою игру (или программу) вместе со всем необходимым, чтобы она работала везде одинаково.

Docker – это платформа, которая позволяет легко создавать и запускать такие "контейнеры".

Почему Docker так популярен?

Потому что он дает много преимуществ:

•  Быстрое тестирование: Вы можете быстро проверить, как ваша программа работает в разных условиях.
•  Легкое выкладывание программ: Вы можете легко поделиться своей программой с другими, не беспокоясь о том, что у них что-то не заработает.
•  Экономия ресурсов: Вы можете запускать много "контейнеров" на одном компьютере, не тратя много ресурсов.

В чем преимущества Docker контейнеризации?

•  Изоляция: Каждый "контейнер" работает отдельно от других, поэтому, если в одном что-то сломается, это не повлияет на другие.
•  Универсальность: "Контейнер" будет работать на любой системе, где установлен Docker.
•  Эффективность: Docker использует меньше ресурсов, чем виртуальные машины.
•  Масштабируемость: Вы можете легко увеличивать или уменьшать количество "контейнеров" в зависимости от нагрузки.

Docker vs Виртуальные машины

Многие слышали про виртуальные машины. Так вот, Docker - это как виртуальные машины, только легче и быстрее. Виртуальные машины занимают много места и требуют много ресурсов, а Docker - нет.

Насколько Docker популярен?

Docker сейчас очень популярен среди разработчиков и компаний. По статистике, около 30-40% разработчиков используют Docker в своих проектах. И многие известные компании, такие как Yandex, eBay, Spotify, Netflix и PayPal, используют Docker для своих приложений.

Как работает Docker?

В Docker есть три основных компонента:

•  Dockerfile: Это текстовый файл, в котором написаны инструкции, как создать "контейнер". Это как рецепт для приготовления блюда.
•  Docker Image: Это "шаблон" для создания "контейнеров". Это как фотография готового блюда.
•  Docker Container: Это запущенный экземпляр "образа". Это как готовое блюдо.

Процесс контейнеризации выглядит так:

1. Вы пишете Dockerfile с инструкциями, как создать "контейнер".
2. Docker "собирает" из Dockerfile "образ".
3. Вы запускаете "образ", и Docker создает "контейнер".

Практическая часть: Разработка ботов

В рамках своего проекта я разработал двух ботов: для Telegram и Discord.

•  Для Telegram-бота я использовал библиотеки asyncio, aiogram и dotenv.
•  Для Discord-бота я использовал библиотеки disnake и dotenv.

Практическая часть: Создание и тестирование контейнера

Чтобы "упаковать" ботов в Docker, я создал Dockerfile. В этом файле я указал, какие программы нужно установить, какие файлы нужно скопировать и как запустить бота.

Затем я "собрал" "образ" Docker с помощью команды docker build. И, наконец, запустил "контейнер" из этого "образа".

Чтобы убедиться, что все работает правильно, я протес